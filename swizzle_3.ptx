//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33191640
// Cuda compilation tools, release 12.2, V12.2.140
// Based on NVVM 7.0.1
//

.version 8.2
.target sm_80
.address_size 64

	// .globl	_Z11gemm_deviceI6__halfN4cute6LayoutINS1_5tupleIJNS1_1CILi16EEENS4_ILi32EEEEEENS3_IJS6_NS4_ILi1EEEEEEEENS1_9TiledCopyINS1_9Copy_AtomIJNS1_11Copy_TraitsINS1_25SM80_CP_ASYNC_CACHEGLOBALIN7cutlass9uint128_tESG_EEJEEES0_EEENS2_INS3_IJNS3_IJNS4_ILi4EEES5_EEENS4_ILi8EEEEEENS3_IJNS3_IJNS4_ILi128EEES8_EEES5_EEEEES7_EENSC_IJNSD_INS1_17SM75_U32x4_LDSM_NEJEEES0_EEENS1_8TiledMMAINS1_8MMA_AtomIJNS1_10MMA_TraitsINS1_28SM80_16x8x16_F16F16F16F16_TNEJEEEEEENS2_INS3_IJS8_NS4_ILi2EEES8_EEENS3_IJNS4_ILi0EEES8_S14_EEEEENS3_IJNS2_INS3_IJS8_S8_S8_EEENS3_IJS14_S14_S14_EEEEENS1_10UnderscoreES1A_EEEEELi16ELi32EEvPKT_
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
// _ZZ11gemm_deviceI6__halfN4cute6LayoutINS1_5tupleIJNS1_1CILi16EEENS4_ILi32EEEEEENS3_IJS6_NS4_ILi1EEEEEEEENS1_9TiledCopyINS1_9Copy_AtomIJNS1_11Copy_TraitsINS1_25SM80_CP_ASYNC_CACHEGLOBALIN7cutlass9uint128_tESG_EEJEEES0_EEENS2_INS3_IJNS3_IJNS4_ILi4EEES5_EEENS4_ILi8EEEEEENS3_IJNS3_IJNS4_ILi128EEES8_EEES5_EEEEES7_EENSC_IJNSD_INS1_17SM75_U32x4_LDSM_NEJEEES0_EEENS1_8TiledMMAINS1_8MMA_AtomIJNS1_10MMA_TraitsINS1_28SM80_16x8x16_F16F16F16F16_TNEJEEEEEENS2_INS3_IJS8_NS4_ILi2EEES8_EEENS3_IJNS4_ILi0EEES8_S14_EEEEENS3_IJNS2_INS3_IJS8_S8_S8_EEENS3_IJS14_S14_S14_EEEEENS1_10UnderscoreES1A_EEEEELi16ELi32EEvPKT_E5smemA has been demoted
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust6system6detail10sequential3seqE[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust8cuda_cub3parE[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust8cuda_cub10par_nosyncE[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust12placeholders2_1E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust12placeholders2_2E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust12placeholders2_3E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust12placeholders2_4E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust12placeholders2_5E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust12placeholders2_6E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust12placeholders2_7E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust12placeholders2_8E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust12placeholders2_9E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust12placeholders3_10E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b86thrust3seqE[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b84cuda3std3__48in_placeE[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b84cuda3std6ranges3__45__cpo4swapE[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b84cuda3std6ranges3__45__cpo9iter_moveE[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b84cute1_E[1];
.global .align 1 .b8 _ZN43_INTERNAL_2e017dab_12_swizzle_3_cu_6d8f45b84cute7productE[1];
.global .align 1 .b8 $str[3] = {10, 10};
.global .align 1 .b8 $str$1[4] = {37, 102, 32};
.global .align 1 .b8 $str$3[3] = {37, 99};
.global .align 1 .b8 $str$4[3] = {37, 100};
.global .align 1 .b8 $str$5[3] = {37, 115};
.global .align 1 .b8 $str$6[6] = {37, 42, 46, 50, 102};
.global .align 1 .b8 $str$7[2] = {95};
.global .align 1 .b8 $str$8[4] = {32, 111, 32};
.global .align 1 .b8 $str$9[6] = {115, 109, 101, 109, 95};
.global .align 1 .b8 $str$10[5] = {112, 116, 114, 91};
.global .align 1 .b8 $str$11[7] = {98, 93, 40, 37, 112, 41};
.global .align 1 .b8 $str$12[2] = {58};
.global .align 1 .b8 $str$13[3] = {58, 10};
.global .align 1 .b8 $str$14[2] = {45};
.global .align 1 .b8 $str$15[2] = {10};

.visible .entry _Z11gemm_deviceI6__halfN4cute6LayoutINS1_5tupleIJNS1_1CILi16EEENS4_ILi32EEEEEENS3_IJS6_NS4_ILi1EEEEEEEENS1_9TiledCopyINS1_9Copy_AtomIJNS1_11Copy_TraitsINS1_25SM80_CP_ASYNC_CACHEGLOBALIN7cutlass9uint128_tESG_EEJEEES0_EEENS2_INS3_IJNS3_IJNS4_ILi4EEES5_EEENS4_ILi8EEEEEENS3_IJNS3_IJNS4_ILi128EEES8_EEES5_EEEEES7_EENSC_IJNSD_INS1_17SM75_U32x4_LDSM_NEJEEES0_EEENS1_8TiledMMAINS1_8MMA_AtomIJNS1_10MMA_TraitsINS1_28SM80_16x8x16_F16F16F16F16_TNEJEEEEEENS2_INS3_IJS8_NS4_ILi2EEES8_EEENS3_IJNS4_ILi0EEES8_S14_EEEEENS3_IJNS2_INS3_IJS8_S8_S8_EEENS3_IJS14_S14_S14_EEEEENS1_10UnderscoreES1A_EEEEELi16ELi32EEvPKT_(
	.param .u64 _Z11gemm_deviceI6__halfN4cute6LayoutINS1_5tupleIJNS1_1CILi16EEENS4_ILi32EEEEEENS3_IJS6_NS4_ILi1EEEEEEEENS1_9TiledCopyINS1_9Copy_AtomIJNS1_11Copy_TraitsINS1_25SM80_CP_ASYNC_CACHEGLOBALIN7cutlass9uint128_tESG_EEJEEES0_EEENS2_INS3_IJNS3_IJNS4_ILi4EEES5_EEENS4_ILi8EEEEEENS3_IJNS3_IJNS4_ILi128EEES8_EEES5_EEEEES7_EENSC_IJNSD_INS1_17SM75_U32x4_LDSM_NEJEEES0_EEENS1_8TiledMMAINS1_8MMA_AtomIJNS1_10MMA_TraitsINS1_28SM80_16x8x16_F16F16F16F16_TNEJEEEEEENS2_INS3_IJS8_NS4_ILi2EEES8_EEENS3_IJNS4_ILi0EEES8_S14_EEEEENS3_IJNS2_INS3_IJS8_S8_S8_EEENS3_IJS14_S14_S14_EEEEENS1_10UnderscoreES1A_EEEEELi16ELi32EEvPKT__param_0
)
{
	.local .align 16 .b8 	__local_depot0[80];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<41>;
	.reg .f32 	%f<41>;
	.reg .b32 	%r<225>;
	.reg .f64 	%fd<41>;
	.reg .b64 	%rd<231>;
	// demoted variable
	.shared .align 2 .b8 _ZZ11gemm_deviceI6__halfN4cute6LayoutINS1_5tupleIJNS1_1CILi16EEENS4_ILi32EEEEEENS3_IJS6_NS4_ILi1EEEEEEEENS1_9TiledCopyINS1_9Copy_AtomIJNS1_11Copy_TraitsINS1_25SM80_CP_ASYNC_CACHEGLOBALIN7cutlass9uint128_tESG_EEJEEES0_EEENS2_INS3_IJNS3_IJNS4_ILi4EEES5_EEENS4_ILi8EEEEEENS3_IJNS3_IJNS4_ILi128EEES8_EEES5_EEEEES7_EENSC_IJNSD_INS1_17SM75_U32x4_LDSM_NEJEEES0_EEENS1_8TiledMMAINS1_8MMA_AtomIJNS1_10MMA_TraitsINS1_28SM80_16x8x16_F16F16F16F16_TNEJEEEEEENS2_INS3_IJS8_NS4_ILi2EEES8_EEENS3_IJNS4_ILi0EEES8_S14_EEEEENS3_IJNS2_INS3_IJS8_S8_S8_EEENS3_IJS14_S14_S14_EEEEENS1_10UnderscoreES1A_EEEEELi16ELi32EEvPKT_E5smemA[1024];

	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [_Z11gemm_deviceI6__halfN4cute6LayoutINS1_5tupleIJNS1_1CILi16EEENS4_ILi32EEEEEENS3_IJS6_NS4_ILi1EEEEEEEENS1_9TiledCopyINS1_9Copy_AtomIJNS1_11Copy_TraitsINS1_25SM80_CP_ASYNC_CACHEGLOBALIN7cutlass9uint128_tESG_EEJEEES0_EEENS2_INS3_IJNS3_IJNS4_ILi4EEES5_EEENS4_ILi8EEEEEENS3_IJNS3_IJNS4_ILi128EEES8_EEES5_EEEEES7_EENSC_IJNSD_INS1_17SM75_U32x4_LDSM_NEJEEES0_EEENS1_8TiledMMAINS1_8MMA_AtomIJNS1_10MMA_TraitsINS1_28SM80_16x8x16_F16F16F16F16_TNEJEEEEEENS2_INS3_IJS8_NS4_ILi2EEES8_EEENS3_IJNS4_ILi0EEES8_S14_EEEEENS3_IJNS2_INS3_IJS8_S8_S8_EEENS3_IJS14_S14_S14_EEEEENS1_10UnderscoreES1A_EEEEELi16ELi32EEvPKT__param_0];
	add.u64 	%rd4, %SP, 32;
	add.u64 	%rd5, %SPL, 32;
	mov.u32 	%r224, 0;
	st.local.v4.u32 	[%rd5], {%r224, %r224, %r224, %r224};
	st.local.v4.u32 	[%rd5+16], {%r224, %r224, %r224, %r224};
	mov.u32 	%r8, %tid.x;
	shl.b32 	%r9, %r8, 3;
	mul.wide.u32 	%rd6, %r9, 2;
	add.s64 	%rd2, %rd3, %rd6;
	shl.b32 	%r10, %r8, 4;
	mov.u32 	%r11, _ZZ11gemm_deviceI6__halfN4cute6LayoutINS1_5tupleIJNS1_1CILi16EEENS4_ILi32EEEEEENS3_IJS6_NS4_ILi1EEEEEEEENS1_9TiledCopyINS1_9Copy_AtomIJNS1_11Copy_TraitsINS1_25SM80_CP_ASYNC_CACHEGLOBALIN7cutlass9uint128_tESG_EEJEEES0_EEENS2_INS3_IJNS3_IJNS4_ILi4EEES5_EEENS4_ILi8EEEEEENS3_IJNS3_IJNS4_ILi128EEES8_EEES5_EEEEES7_EENSC_IJNSD_INS1_17SM75_U32x4_LDSM_NEJEEES0_EEENS1_8TiledMMAINS1_8MMA_AtomIJNS1_10MMA_TraitsINS1_28SM80_16x8x16_F16F16F16F16_TNEJEEEEEENS2_INS3_IJS8_NS4_ILi2EEES8_EEENS3_IJNS4_ILi0EEES8_S14_EEEEENS3_IJNS2_INS3_IJS8_S8_S8_EEENS3_IJS14_S14_S14_EEEEENS1_10UnderscoreES1A_EEEEELi16ELi32EEvPKT_E5smemA;
	add.s32 	%r5, %r11, %r10;
	mov.u32 	%r6, 16;
	// begin inline asm
	cp.async.cg.shared.global.L2::128B [%r5], [%rd2], 16, %r6;

	// end inline asm
	bar.sync 	0;
	setp.ne.s32 	%p1, %r8, 0;
	@%p1 bra 	$L__BB0_6;

	add.u64 	%rd7, %SP, 16;
	add.u64 	%rd8, %SPL, 16;
	mov.u64 	%rd9, $str$9;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r14, 1;
	mov.u32 	%r15, 32;
	mov.u64 	%rd11, 0;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r16, [retval0+0];
	} // callseq 0
	mov.u64 	%rd12, $str$10;
	cvta.global.u64 	%rd13, %rd12;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r17, [retval0+0];
	} // callseq 1
	add.u64 	%rd14, %SP, 0;
	add.u64 	%rd15, %SPL, 0;
	st.local.u32 	[%rd15], %r6;
	mov.u64 	%rd16, $str$4;
	cvta.global.u64 	%rd17, %rd16;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r19, [retval0+0];
	} // callseq 2
	{ .reg .b64 %tmp;
	  cvt.u64.u32 	%tmp, %r11;
	  cvta.shared.u64 	%rd18, %tmp; }
	st.local.u64 	[%rd8], %rd18;
	mov.u64 	%rd19, $str$11;
	cvta.global.u64 	%rd20, %rd19;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r21, [retval0+0];
	} // callseq 3
	mov.u64 	%rd23, $str$8;
	cvta.global.u64 	%rd24, %rd23;
	st.local.u64 	[%rd8], %rd24;
	mov.u64 	%rd25, $str$5;
	cvta.global.u64 	%rd26, %rd25;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r22, [retval0+0];
	} // callseq 4
	mov.u32 	%r23, 40;
	st.local.u32 	[%rd8], %r23;
	mov.u64 	%rd29, $str$3;
	cvta.global.u64 	%rd30, %rd29;
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r24, [retval0+0];
	} // callseq 5
	mov.u64 	%rd31, $str$7;
	cvta.global.u64 	%rd32, %rd31;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r25, [retval0+0];
	} // callseq 6
	st.local.u32 	[%rd8], %r6;
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r26, [retval0+0];
	} // callseq 7
	mov.u32 	%r27, 44;
	st.local.u32 	[%rd8], %r27;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r28, [retval0+0];
	} // callseq 8
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r29, [retval0+0];
	} // callseq 9
	st.local.u32 	[%rd8], %r15;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r30, [retval0+0];
	} // callseq 10
	mov.u32 	%r31, 41;
	st.local.u32 	[%rd8], %r31;
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r32, [retval0+0];
	} // callseq 11
	mov.u64 	%rd43, $str$12;
	cvta.global.u64 	%rd44, %rd43;
	st.local.u64 	[%rd8], %rd44;
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r33, [retval0+0];
	} // callseq 12
	st.local.u32 	[%rd8], %r23;
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r34, [retval0+0];
	} // callseq 13
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r35, [retval0+0];
	} // callseq 14
	st.local.u32 	[%rd8], %r15;
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r36, [retval0+0];
	} // callseq 15
	st.local.u32 	[%rd8], %r27;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r37, [retval0+0];
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r38, [retval0+0];
	} // callseq 17
	st.local.u32 	[%rd8], %r14;
	{ // callseq 18, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r39, [retval0+0];
	} // callseq 18
	st.local.u32 	[%rd8], %r31;
	{ // callseq 19, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r40, [retval0+0];
	} // callseq 19
	add.u64 	%rd55, %SP, 64;
	add.u64 	%rd1, %SPL, 64;
	mov.u32 	%r223, 8;

$L__BB0_2:
	and.b32  	%r41, %r224, 56;
	setp.ne.s32 	%p2, %r41, 0;
	@%p2 bra 	$L__BB0_4;

	mov.u64 	%rd56, $str;
	cvta.global.u64 	%rd57, %rd56;
	mov.u64 	%rd58, 0;
	{ // callseq 20, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd57;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd58;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r42, [retval0+0];
	} // callseq 20

$L__BB0_4:
	add.s32 	%r44, %r11, %r223;
	ld.shared.u16 	%rs1, [%r44+-8];
	// begin inline asm
	{  cvt.f32.f16 %f1, %rs1;}

	// end inline asm
	cvt.f64.f32 	%fd1, %f1;
	st.local.f64 	[%rd1], %fd1;
	mov.u64 	%rd59, $str$1;
	cvta.global.u64 	%rd60, %rd59;
	{ // callseq 21, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r45, [retval0+0];
	} // callseq 21
	ld.shared.u16 	%rs2, [%r44+-6];
	// begin inline asm
	{  cvt.f32.f16 %f2, %rs2;}

	// end inline asm
	cvt.f64.f32 	%fd2, %f2;
	st.local.f64 	[%rd1], %fd2;
	{ // callseq 22, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r46, [retval0+0];
	} // callseq 22
	ld.shared.u16 	%rs3, [%r44+-4];
	// begin inline asm
	{  cvt.f32.f16 %f3, %rs3;}

	// end inline asm
	cvt.f64.f32 	%fd3, %f3;
	st.local.f64 	[%rd1], %fd3;
	{ // callseq 23, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r47, [retval0+0];
	} // callseq 23
	ld.shared.u16 	%rs4, [%r44+-2];
	// begin inline asm
	{  cvt.f32.f16 %f4, %rs4;}

	// end inline asm
	cvt.f64.f32 	%fd4, %f4;
	st.local.f64 	[%rd1], %fd4;
	{ // callseq 24, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r48, [retval0+0];
	} // callseq 24
	ld.shared.u16 	%rs5, [%r44];
	// begin inline asm
	{  cvt.f32.f16 %f5, %rs5;}

	// end inline asm
	cvt.f64.f32 	%fd5, %f5;
	st.local.f64 	[%rd1], %fd5;
	{ // callseq 25, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r49, [retval0+0];
	} // callseq 25
	ld.shared.u16 	%rs6, [%r44+2];
	// begin inline asm
	{  cvt.f32.f16 %f6, %rs6;}

	// end inline asm
	cvt.f64.f32 	%fd6, %f6;
	st.local.f64 	[%rd1], %fd6;
	{ // callseq 26, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r50, [retval0+0];
	} // callseq 26
	ld.shared.u16 	%rs7, [%r44+4];
	// begin inline asm
	{  cvt.f32.f16 %f7, %rs7;}

	// end inline asm
	cvt.f64.f32 	%fd7, %f7;
	st.local.f64 	[%rd1], %fd7;
	{ // callseq 27, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r51, [retval0+0];
	} // callseq 27
	ld.shared.u16 	%rs8, [%r44+6];
	// begin inline asm
	{  cvt.f32.f16 %f8, %rs8;}

	// end inline asm
	cvt.f64.f32 	%fd8, %f8;
	st.local.f64 	[%rd1], %fd8;
	{ // callseq 28, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r52, [retval0+0];
	} // callseq 28
	add.s32 	%r224, %r224, 8;
	add.s32 	%r223, %r223, 16;
	setp.ne.s32 	%p3, %r223, 1032;
	@%p3 bra 	$L__BB0_2;

	mov.u32 	%r53, 0;
	mov.u32 	%r54, 1;
	mov.u64 	%rd64, 0;
	{ // callseq 29, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r55, [retval0+0];
	} // callseq 29
	{ // callseq 30, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r56, [retval0+0];
	} // callseq 30
	mov.u32 	%r57, 16;
	st.local.u32 	[%rd15], %r57;
	{ // callseq 31, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r58, [retval0+0];
	} // callseq 31
	shr.u32 	%r60, %r8, 1;
	and.b32  	%r61, %r60, 8;
	shl.b32 	%r62, %r8, 5;
	and.b32  	%r63, %r62, 480;
	or.b32  	%r64, %r61, %r63;
	mul.wide.u32 	%rd71, %r64, 2;
	add.s64 	%rd73, %rd18, %rd71;
	st.local.u64 	[%rd8], %rd73;
	{ // callseq 32, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r66, [retval0+0];
	} // callseq 32
	st.local.u64 	[%rd8], %rd24;
	{ // callseq 33, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r67, [retval0+0];
	} // callseq 33
	mov.u32 	%r68, 40;
	st.local.u32 	[%rd8], %r68;
	{ // callseq 34, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r69, [retval0+0];
	} // callseq 34
	st.local.u32 	[%rd8], %r68;
	{ // callseq 35, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r70, [retval0+0];
	} // callseq 35
	{ // callseq 36, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r71, [retval0+0];
	} // callseq 36
	mov.u32 	%r72, 8;
	st.local.u32 	[%rd8], %r72;
	{ // callseq 37, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r73, [retval0+0];
	} // callseq 37
	mov.u32 	%r74, 44;
	st.local.u32 	[%rd8], %r74;
	{ // callseq 38, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r75, [retval0+0];
	} // callseq 38
	{ // callseq 39, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r76, [retval0+0];
	} // callseq 39
	st.local.u32 	[%rd8], %r54;
	{ // callseq 40, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r77, [retval0+0];
	} // callseq 40
	mov.u32 	%r78, 41;
	st.local.u32 	[%rd8], %r78;
	{ // callseq 41, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r79, [retval0+0];
	} // callseq 41
	st.local.u32 	[%rd8], %r74;
	{ // callseq 42, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r80, [retval0+0];
	} // callseq 42
	{ // callseq 43, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r81, [retval0+0];
	} // callseq 43
	st.local.u32 	[%rd8], %r54;
	{ // callseq 44, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r82, [retval0+0];
	} // callseq 44
	st.local.u32 	[%rd8], %r74;
	{ // callseq 45, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r83, [retval0+0];
	} // callseq 45
	{ // callseq 46, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r84, [retval0+0];
	} // callseq 46
	mov.u32 	%r85, 2;
	st.local.u32 	[%rd8], %r85;
	{ // callseq 47, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r86, [retval0+0];
	} // callseq 47
	st.local.u32 	[%rd8], %r78;
	{ // callseq 48, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r87, [retval0+0];
	} // callseq 48
	st.local.u64 	[%rd8], %rd44;
	{ // callseq 49, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r88, [retval0+0];
	} // callseq 49
	st.local.u32 	[%rd8], %r68;
	{ // callseq 50, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r89, [retval0+0];
	} // callseq 50
	st.local.u32 	[%rd8], %r68;
	{ // callseq 51, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r90, [retval0+0];
	} // callseq 51
	{ // callseq 52, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r91, [retval0+0];
	} // callseq 52
	st.local.u32 	[%rd8], %r54;
	{ // callseq 53, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r92, [retval0+0];
	} // callseq 53
	st.local.u32 	[%rd8], %r74;
	{ // callseq 54, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r93, [retval0+0];
	} // callseq 54
	{ // callseq 55, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r94, [retval0+0];
	} // callseq 55
	st.local.u32 	[%rd8], %r53;
	{ // callseq 56, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r95, [retval0+0];
	} // callseq 56
	st.local.u32 	[%rd8], %r78;
	{ // callseq 57, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r96, [retval0+0];
	} // callseq 57
	st.local.u32 	[%rd8], %r74;
	{ // callseq 58, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r97, [retval0+0];
	} // callseq 58
	{ // callseq 59, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r98, [retval0+0];
	} // callseq 59
	st.local.u32 	[%rd8], %r53;
	{ // callseq 60, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r99, [retval0+0];
	} // callseq 60
	st.local.u32 	[%rd8], %r74;
	{ // callseq 61, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r100, [retval0+0];
	} // callseq 61
	{ // callseq 62, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r101, [retval0+0];
	} // callseq 62
	st.local.u32 	[%rd8], %r57;
	{ // callseq 63, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r102, [retval0+0];
	} // callseq 63
	st.local.u32 	[%rd8], %r78;
	{ // callseq 64, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r103, [retval0+0];
	} // callseq 64
	mov.u64 	%rd136, $str;
	cvta.global.u64 	%rd137, %rd136;
	{ // callseq 65, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd137;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r104, [retval0+0];
	} // callseq 65
	shl.b32 	%r105, %r64, 1;
	add.s32 	%r106, %r11, %r105;
	ld.shared.u16 	%rs9, [%r106];
	// begin inline asm
	{  cvt.f32.f16 %f9, %rs9;}

	// end inline asm
	cvt.f64.f32 	%fd9, %f9;
	st.local.f64 	[%rd1], %fd9;
	{ // callseq 66, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r107, [retval0+0];
	} // callseq 66
	ld.shared.u16 	%rs10, [%r106+2];
	// begin inline asm
	{  cvt.f32.f16 %f10, %rs10;}

	// end inline asm
	cvt.f64.f32 	%fd10, %f10;
	st.local.f64 	[%rd1], %fd10;
	{ // callseq 67, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r108, [retval0+0];
	} // callseq 67
	ld.shared.u16 	%rs11, [%r106+4];
	// begin inline asm
	{  cvt.f32.f16 %f11, %rs11;}

	// end inline asm
	cvt.f64.f32 	%fd11, %f11;
	st.local.f64 	[%rd1], %fd11;
	{ // callseq 68, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r109, [retval0+0];
	} // callseq 68
	ld.shared.u16 	%rs12, [%r106+6];
	// begin inline asm
	{  cvt.f32.f16 %f12, %rs12;}

	// end inline asm
	cvt.f64.f32 	%fd12, %f12;
	st.local.f64 	[%rd1], %fd12;
	{ // callseq 69, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r110, [retval0+0];
	} // callseq 69
	ld.shared.u16 	%rs13, [%r106+8];
	// begin inline asm
	{  cvt.f32.f16 %f13, %rs13;}

	// end inline asm
	cvt.f64.f32 	%fd13, %f13;
	st.local.f64 	[%rd1], %fd13;
	{ // callseq 70, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r111, [retval0+0];
	} // callseq 70
	ld.shared.u16 	%rs14, [%r106+10];
	// begin inline asm
	{  cvt.f32.f16 %f14, %rs14;}

	// end inline asm
	cvt.f64.f32 	%fd14, %f14;
	st.local.f64 	[%rd1], %fd14;
	{ // callseq 71, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r112, [retval0+0];
	} // callseq 71
	ld.shared.u16 	%rs15, [%r106+12];
	// begin inline asm
	{  cvt.f32.f16 %f15, %rs15;}

	// end inline asm
	cvt.f64.f32 	%fd15, %f15;
	st.local.f64 	[%rd1], %fd15;
	{ // callseq 72, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r113, [retval0+0];
	} // callseq 72
	ld.shared.u16 	%rs16, [%r106+14];
	// begin inline asm
	{  cvt.f32.f16 %f16, %rs16;}

	// end inline asm
	cvt.f64.f32 	%fd16, %f16;
	st.local.f64 	[%rd1], %fd16;
	{ // callseq 73, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r114, [retval0+0];
	} // callseq 73
	ld.shared.u16 	%rs17, [%r106+16];
	// begin inline asm
	{  cvt.f32.f16 %f17, %rs17;}

	// end inline asm
	cvt.f64.f32 	%fd17, %f17;
	st.local.f64 	[%rd1], %fd17;
	{ // callseq 74, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r115, [retval0+0];
	} // callseq 74
	ld.shared.u16 	%rs18, [%r106+18];
	// begin inline asm
	{  cvt.f32.f16 %f18, %rs18;}

	// end inline asm
	cvt.f64.f32 	%fd18, %f18;
	st.local.f64 	[%rd1], %fd18;
	{ // callseq 75, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r116, [retval0+0];
	} // callseq 75
	ld.shared.u16 	%rs19, [%r106+20];
	// begin inline asm
	{  cvt.f32.f16 %f19, %rs19;}

	// end inline asm
	cvt.f64.f32 	%fd19, %f19;
	st.local.f64 	[%rd1], %fd19;
	{ // callseq 76, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r117, [retval0+0];
	} // callseq 76
	ld.shared.u16 	%rs20, [%r106+22];
	// begin inline asm
	{  cvt.f32.f16 %f20, %rs20;}

	// end inline asm
	cvt.f64.f32 	%fd20, %f20;
	st.local.f64 	[%rd1], %fd20;
	{ // callseq 77, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r118, [retval0+0];
	} // callseq 77
	ld.shared.u16 	%rs21, [%r106+24];
	// begin inline asm
	{  cvt.f32.f16 %f21, %rs21;}

	// end inline asm
	cvt.f64.f32 	%fd21, %f21;
	st.local.f64 	[%rd1], %fd21;
	{ // callseq 78, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r119, [retval0+0];
	} // callseq 78
	ld.shared.u16 	%rs22, [%r106+26];
	// begin inline asm
	{  cvt.f32.f16 %f22, %rs22;}

	// end inline asm
	cvt.f64.f32 	%fd22, %f22;
	st.local.f64 	[%rd1], %fd22;
	{ // callseq 79, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r120, [retval0+0];
	} // callseq 79
	ld.shared.u16 	%rs23, [%r106+28];
	// begin inline asm
	{  cvt.f32.f16 %f23, %rs23;}

	// end inline asm
	cvt.f64.f32 	%fd23, %f23;
	st.local.f64 	[%rd1], %fd23;
	{ // callseq 80, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r121, [retval0+0];
	} // callseq 80
	ld.shared.u16 	%rs24, [%r106+30];
	// begin inline asm
	{  cvt.f32.f16 %f24, %rs24;}

	// end inline asm
	cvt.f64.f32 	%fd24, %f24;
	st.local.f64 	[%rd1], %fd24;
	{ // callseq 81, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r122, [retval0+0];
	} // callseq 81

$L__BB0_6:
	shr.u32 	%r134, %r8, 1;
	and.b32  	%r135, %r134, 8;
	shl.b32 	%r136, %r8, 5;
	and.b32  	%r137, %r136, 480;
	or.b32  	%r138, %r135, %r137;
	shl.b32 	%r139, %r138, 1;
	add.s32 	%r127, %r11, %r139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r123, %r124, %r125, %r126}, [%r127];

	// end inline asm
	st.local.v4.u32 	[%rd5], {%r123, %r124, %r125, %r126};
	add.s32 	%r132, %r127, 32;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r128, %r129, %r130, %r131}, [%r132];

	// end inline asm
	st.local.v4.u32 	[%rd5+16], {%r128, %r129, %r130, %r131};
	@%p1 bra 	$L__BB0_8;

	mov.u64 	%rd144, $str$10;
	cvta.global.u64 	%rd145, %rd144;
	mov.u32 	%r141, 0;
	mov.u32 	%r142, 1;
	mov.u64 	%rd146, 0;
	{ // callseq 82, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd145;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r143, [retval0+0];
	} // callseq 82
	add.u64 	%rd147, %SP, 0;
	add.u64 	%rd148, %SPL, 0;
	mov.u32 	%r144, 16;
	st.local.u32 	[%rd148], %r144;
	mov.u64 	%rd149, $str$4;
	cvta.global.u64 	%rd150, %rd149;
	{ // callseq 83, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd147;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r145, [retval0+0];
	} // callseq 83
	add.u64 	%rd151, %SP, 16;
	add.u64 	%rd152, %SPL, 16;
	st.local.u64 	[%rd152], %rd4;
	mov.u64 	%rd154, $str$11;
	cvta.global.u64 	%rd155, %rd154;
	{ // callseq 84, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd155;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r146, [retval0+0];
	} // callseq 84
	mov.u64 	%rd158, $str$8;
	cvta.global.u64 	%rd159, %rd158;
	st.local.u64 	[%rd152], %rd159;
	mov.u64 	%rd160, $str$5;
	cvta.global.u64 	%rd161, %rd160;
	{ // callseq 85, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r147, [retval0+0];
	} // callseq 85
	mov.u32 	%r148, 40;
	st.local.u32 	[%rd152], %r148;
	mov.u64 	%rd164, $str$3;
	cvta.global.u64 	%rd165, %rd164;
	{ // callseq 86, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r149, [retval0+0];
	} // callseq 86
	st.local.u32 	[%rd152], %r148;
	{ // callseq 87, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r150, [retval0+0];
	} // callseq 87
	mov.u64 	%rd168, $str$7;
	cvta.global.u64 	%rd169, %rd168;
	{ // callseq 88, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd169;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r151, [retval0+0];
	} // callseq 88
	mov.u32 	%r152, 8;
	st.local.u32 	[%rd152], %r152;
	{ // callseq 89, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r153, [retval0+0];
	} // callseq 89
	mov.u32 	%r154, 44;
	st.local.u32 	[%rd152], %r154;
	{ // callseq 90, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r155, [retval0+0];
	} // callseq 90
	{ // callseq 91, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd169;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r156, [retval0+0];
	} // callseq 91
	st.local.u32 	[%rd152], %r142;
	{ // callseq 92, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r157, [retval0+0];
	} // callseq 92
	mov.u32 	%r158, 41;
	st.local.u32 	[%rd152], %r158;
	{ // callseq 93, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r159, [retval0+0];
	} // callseq 93
	st.local.u32 	[%rd152], %r154;
	{ // callseq 94, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r160, [retval0+0];
	} // callseq 94
	{ // callseq 95, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd169;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r161, [retval0+0];
	} // callseq 95
	st.local.u32 	[%rd152], %r142;
	{ // callseq 96, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r162, [retval0+0];
	} // callseq 96
	st.local.u32 	[%rd152], %r154;
	{ // callseq 97, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r163, [retval0+0];
	} // callseq 97
	{ // callseq 98, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd169;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r164, [retval0+0];
	} // callseq 98
	mov.u32 	%r165, 2;
	st.local.u32 	[%rd152], %r165;
	{ // callseq 99, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r166, [retval0+0];
	} // callseq 99
	st.local.u32 	[%rd152], %r158;
	{ // callseq 100, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r167, [retval0+0];
	} // callseq 100
	mov.u64 	%rd190, $str$12;
	cvta.global.u64 	%rd191, %rd190;
	st.local.u64 	[%rd152], %rd191;
	{ // callseq 101, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r168, [retval0+0];
	} // callseq 101
	st.local.u32 	[%rd152], %r148;
	{ // callseq 102, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r169, [retval0+0];
	} // callseq 102
	st.local.u32 	[%rd152], %r148;
	{ // callseq 103, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r170, [retval0+0];
	} // callseq 103
	{ // callseq 104, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd169;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r171, [retval0+0];
	} // callseq 104
	st.local.u32 	[%rd152], %r142;
	{ // callseq 105, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r172, [retval0+0];
	} // callseq 105
	st.local.u32 	[%rd152], %r154;
	{ // callseq 106, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r173, [retval0+0];
	} // callseq 106
	{ // callseq 107, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd169;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r174, [retval0+0];
	} // callseq 107
	st.local.u32 	[%rd152], %r141;
	{ // callseq 108, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r175, [retval0+0];
	} // callseq 108
	st.local.u32 	[%rd152], %r158;
	{ // callseq 109, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r176, [retval0+0];
	} // callseq 109
	st.local.u32 	[%rd152], %r154;
	{ // callseq 110, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r177, [retval0+0];
	} // callseq 110
	{ // callseq 111, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd169;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r178, [retval0+0];
	} // callseq 111
	st.local.u32 	[%rd152], %r141;
	{ // callseq 112, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r179, [retval0+0];
	} // callseq 112
	st.local.u32 	[%rd152], %r154;
	{ // callseq 113, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r180, [retval0+0];
	} // callseq 113
	{ // callseq 114, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd169;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r181, [retval0+0];
	} // callseq 114
	st.local.u32 	[%rd152], %r152;
	{ // callseq 115, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r182, [retval0+0];
	} // callseq 115
	st.local.u32 	[%rd152], %r158;
	{ // callseq 116, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r183, [retval0+0];
	} // callseq 116
	mov.u64 	%rd216, $str$13;
	cvta.global.u64 	%rd217, %rd216;
	st.local.u64 	[%rd152], %rd217;
	{ // callseq 117, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r184, [retval0+0];
	} // callseq 117
	ld.local.u16 	%rs25, [%rd5];
	// begin inline asm
	{  cvt.f32.f16 %f25, %rs25;}

	// end inline asm
	cvt.f64.f32 	%fd25, %f25;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd25;
	mov.u64 	%rd221, $str$6;
	cvta.global.u64 	%rd222, %rd221;
	{ // callseq 118, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r185, [retval0+0];
	} // callseq 118
	mov.u64 	%rd223, $str$15;
	cvta.global.u64 	%rd224, %rd223;
	{ // callseq 119, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r186, [retval0+0];
	} // callseq 119
	ld.local.u16 	%rs26, [%rd5+2];
	// begin inline asm
	{  cvt.f32.f16 %f26, %rs26;}

	// end inline asm
	cvt.f64.f32 	%fd26, %f26;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd26;
	{ // callseq 120, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r187, [retval0+0];
	} // callseq 120
	{ // callseq 121, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r188, [retval0+0];
	} // callseq 121
	ld.local.u16 	%rs27, [%rd5+4];
	// begin inline asm
	{  cvt.f32.f16 %f27, %rs27;}

	// end inline asm
	cvt.f64.f32 	%fd27, %f27;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd27;
	{ // callseq 122, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r189, [retval0+0];
	} // callseq 122
	{ // callseq 123, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r190, [retval0+0];
	} // callseq 123
	ld.local.u16 	%rs28, [%rd5+6];
	// begin inline asm
	{  cvt.f32.f16 %f28, %rs28;}

	// end inline asm
	cvt.f64.f32 	%fd28, %f28;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd28;
	{ // callseq 124, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r191, [retval0+0];
	} // callseq 124
	{ // callseq 125, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r192, [retval0+0];
	} // callseq 125
	ld.local.u16 	%rs29, [%rd5+8];
	// begin inline asm
	{  cvt.f32.f16 %f29, %rs29;}

	// end inline asm
	cvt.f64.f32 	%fd29, %f29;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd29;
	{ // callseq 126, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r193, [retval0+0];
	} // callseq 126
	{ // callseq 127, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r194, [retval0+0];
	} // callseq 127
	ld.local.u16 	%rs30, [%rd5+10];
	// begin inline asm
	{  cvt.f32.f16 %f30, %rs30;}

	// end inline asm
	cvt.f64.f32 	%fd30, %f30;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd30;
	{ // callseq 128, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r195, [retval0+0];
	} // callseq 128
	{ // callseq 129, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r196, [retval0+0];
	} // callseq 129
	ld.local.u16 	%rs31, [%rd5+12];
	// begin inline asm
	{  cvt.f32.f16 %f31, %rs31;}

	// end inline asm
	cvt.f64.f32 	%fd31, %f31;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd31;
	{ // callseq 130, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r197, [retval0+0];
	} // callseq 130
	{ // callseq 131, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r198, [retval0+0];
	} // callseq 131
	ld.local.u16 	%rs32, [%rd5+14];
	// begin inline asm
	{  cvt.f32.f16 %f32, %rs32;}

	// end inline asm
	cvt.f64.f32 	%fd32, %f32;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd32;
	{ // callseq 132, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r199, [retval0+0];
	} // callseq 132
	{ // callseq 133, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r200, [retval0+0];
	} // callseq 133
	mov.u64 	%rd227, $str$14;
	cvta.global.u64 	%rd228, %rd227;
	st.local.u64 	[%rd152], %rd228;
	{ // callseq 134, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r201, [retval0+0];
	} // callseq 134
	st.local.u64 	[%rd152], %rd228;
	{ // callseq 135, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r202, [retval0+0];
	} // callseq 135
	st.local.u64 	[%rd152], %rd228;
	{ // callseq 136, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r203, [retval0+0];
	} // callseq 136
	st.local.u64 	[%rd152], %rd228;
	{ // callseq 137, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r204, [retval0+0];
	} // callseq 137
	st.local.u64 	[%rd152], %rd228;
	{ // callseq 138, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r205, [retval0+0];
	} // callseq 138
	st.local.u64 	[%rd152], %rd224;
	{ // callseq 139, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r206, [retval0+0];
	} // callseq 139
	ld.local.u16 	%rs33, [%rd5+16];
	// begin inline asm
	{  cvt.f32.f16 %f33, %rs33;}

	// end inline asm
	cvt.f64.f32 	%fd33, %f33;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd33;
	{ // callseq 140, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r207, [retval0+0];
	} // callseq 140
	{ // callseq 141, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r208, [retval0+0];
	} // callseq 141
	ld.local.u16 	%rs34, [%rd5+18];
	// begin inline asm
	{  cvt.f32.f16 %f34, %rs34;}

	// end inline asm
	cvt.f64.f32 	%fd34, %f34;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd34;
	{ // callseq 142, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r209, [retval0+0];
	} // callseq 142
	{ // callseq 143, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r210, [retval0+0];
	} // callseq 143
	ld.local.u16 	%rs35, [%rd5+20];
	// begin inline asm
	{  cvt.f32.f16 %f35, %rs35;}

	// end inline asm
	cvt.f64.f32 	%fd35, %f35;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd35;
	{ // callseq 144, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r211, [retval0+0];
	} // callseq 144
	{ // callseq 145, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r212, [retval0+0];
	} // callseq 145
	ld.local.u16 	%rs36, [%rd5+22];
	// begin inline asm
	{  cvt.f32.f16 %f36, %rs36;}

	// end inline asm
	cvt.f64.f32 	%fd36, %f36;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd36;
	{ // callseq 146, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r213, [retval0+0];
	} // callseq 146
	{ // callseq 147, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r214, [retval0+0];
	} // callseq 147
	ld.local.u16 	%rs37, [%rd5+24];
	// begin inline asm
	{  cvt.f32.f16 %f37, %rs37;}

	// end inline asm
	cvt.f64.f32 	%fd37, %f37;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd37;
	{ // callseq 148, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r215, [retval0+0];
	} // callseq 148
	{ // callseq 149, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r216, [retval0+0];
	} // callseq 149
	ld.local.u16 	%rs38, [%rd5+26];
	// begin inline asm
	{  cvt.f32.f16 %f38, %rs38;}

	// end inline asm
	cvt.f64.f32 	%fd38, %f38;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd38;
	{ // callseq 150, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r217, [retval0+0];
	} // callseq 150
	{ // callseq 151, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r218, [retval0+0];
	} // callseq 151
	ld.local.u16 	%rs39, [%rd5+28];
	// begin inline asm
	{  cvt.f32.f16 %f39, %rs39;}

	// end inline asm
	cvt.f64.f32 	%fd39, %f39;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd39;
	{ // callseq 152, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r219, [retval0+0];
	} // callseq 152
	{ // callseq 153, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r220, [retval0+0];
	} // callseq 153
	ld.local.u16 	%rs40, [%rd5+30];
	// begin inline asm
	{  cvt.f32.f16 %f40, %rs40;}

	// end inline asm
	cvt.f64.f32 	%fd40, %f40;
	st.local.u32 	[%rd152], %r152;
	st.local.f64 	[%rd152+8], %fd40;
	{ // callseq 154, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd222;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd151;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r221, [retval0+0];
	} // callseq 154
	{ // callseq 155, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd224;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd146;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r222, [retval0+0];
	} // callseq 155

$L__BB0_8:
	ret;

}
	// .globl	_ZN3cub17CUB_200200_800_NS11EmptyKernelIvEEvv
.visible .entry _ZN3cub17CUB_200200_800_NS11EmptyKernelIvEEvv()
{



	ret;

}

